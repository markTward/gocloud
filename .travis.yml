language: go
sudo: required
go:
- 1.8.x
env:
  global:
  - HELM_VERSION: v2.3.1
  - CLUSTER_NAME: k0
  - CLOUDSDK_COMPUTE_ZONE: us-west1-a
  - GCLOUD_PROJECT_ID: k8sdemo-159622
  - GOCLOUD_PROJECT_NAME=gocloud
  - DOCKER_COMMIT_TAG=${TRAVIS_COMMIT::7}
  - BRANCH_REGEX="^(master$|release//*|pr/.*)"
cache:
  directories:
    - "$HOME/google-cloud-sdk/"
services:
- docker
before_install:
- pwd
- env | grep -v DOCKER | grep -v GOCLOUD | sort
- GOCLOUD_CICD_DIR="external/github.com/marktward/gocloud-cicd"
- mkdir -p $GOCLOUD_CICD_DIR
- git clone https://github.com/markTward/gocloud-cicd.git $GOCLOUD_CICD_DIR
install:
- go get -d -v ./...
- go get -d -v github.com/stretchr/testify/assert
# install helm
- wget "https://storage.googleapis.com/kubernetes-helm/helm-${HELM_VERSION}-linux-amd64.tar.gz"
- tar -xzf "helm-${HELM_VERSION}-linux-amd64.tar.gz"
- sudo mv linux-amd64/helm /usr/local/bin/helm
- helm version --client
# install gcloud && kubectl
- if [ ! -d "$HOME/google-cloud-sdk/bin" ]; then rm -rf $HOME/google-cloud-sdk; export CLOUDSDK_CORE_DISABLE_PROMPTS=1; curl https://sdk.cloud.google.com | bash; fi
- sudo gcloud --quiet components install kubectl
- sudo gcloud --quiet components update
- sudo ln -s /usr/lib/google-cloud-sdk/bin/kubectl /usr/local/bin/kubectl
- which gcloud || true
- which kubectl || true
- gcloud version
- kubectl version --client=true || true
# gcloud service account credentials
- openssl aes-256-cbc -K $encrypted_2a9422d072d6_key -iv $encrypted_2a9422d072d6_iv -in credentials.tar.gz.enc -out credentials.tar.gz -d
- tar -xzf credentials.tar.gz
- sudo gcloud auth activate-service-account --key-file client-secret.json
- sudo gcloud auth list
# gcloud configurations
- sudo gcloud config set project $GCLOUD_PROJECT_ID
- sudo gcloud config set container/cluster $CLUSTER_NAME
- sudo gcloud config set compute/zone ${CLOUDSDK_COMPUTE_ZONE}
- sudo gcloud config list
- sudo gcloud container clusters get-credentials $CLUSTER_NAME
script:
- go test -v ./...
- docker build -t $GOCLOUD_PROJECT_NAME:$DOCKER_COMMIT_TAG -f Dockerfile .
after_success:
# select docker repo target by branch
# - "if [[ $TRAVIS_BRANCH =~ $BRANCH_REGEX ]]; then export DOCKER_REPO=gcr.io/GCLOUD_PROJECT_ID/$GOCLOUD_PROJECT_NAME; else export DOCKER_REPO=$(echo $TRAVIS_REPO_SLUG | tr '[:upper:]' '[:lower:]'); fi"
- "./$GOCLOUD_CICD_DIR/travis/docker_push.sh"
before_deploy:
# show k8s context
- sudo kubectl config get-contexts
# helm / k8s state before deploy
# BUG: helm fails to obtain k8s cluster access token; must run kubectl command first
- sudo kubectl get namespaces
- sudo helm lint --strict --debug deploy/helm/gocloud/
- sudo helm list
deploy:
  # deploy develop to the staging environment
  - provider: script
    script: deploy/travis/deploy_k8s.sh testDeployToKubernetes
    # script: deploy/travis/deploy_k8s.sh NODEPLOY DRYRUN
    on:
      all_branches: true
      condition: "$TRAVIS_BRANCH =~ ^(dev$|^feature-.*)"
  # deploy develop to the staging environment
  - provider: script
    script: deploy/travis/deploy_k8s.sh STAGING
    on:
      all_branches: true
      condition: "$TRAVIS_BRANCH =~ ^pr/.*"
  # deploy master to production
  - provider: script
    script: deploy/travis/deploy_k8s.sh PRODUCTION
    on:
      branch: master
  # - provider: script
  # script: deploy/travis/deploy_k8s.sh
  # on:
  #   # tags: true
  #   # condition: "$TRAVIS_TAG =~ ^release.*$"
  #   all_branches: true
after_deploy:
- sudo kubectl get svc,deploy,pod --namespace=gocloud
- sudo helm list
notifications:
  email: false
  slack:
    secure: ifhkq27en11fNB4zTw5MRjn4ef+3C9NbysrH5pIVejjfQSYeqw2eIfrD/XbKiEUBlLd9LKg4FkhoHnkr9CHO2H+JkZYJWy5fuH4qPJX/m5YN92ZCuIpocFUOsr9+q1NrMDUlmVrLzTA7MTIn1RVCggDQMwL7gdkQDnTz9ROvCWQnKFYlo2PRB7E/PhSNgsBn6FvpXJLNjv640eaNI9h82n4IMzJWEjMyUJNGXxRL1gvyUGrFJ+7DavJVTbnN1zq1SBZRTgVsvCHWGR3fMjFa3Nw9YQpThR6W8LYCXclSOX+RnKmeThxaKuYjm3up2jBJFWdqxswqWQQl0J/HLuD2KGfvz3D0hgKy7ytIhOtKzJAJklR4N/GSqjYvK80CfYBdddhxAsjMp/nB0Fud5zeM6gCPzp9YxK/KLo9C3UyGV7BCci915y49g8+9gicBYlHULdD5KG4VlsFRyuVGXEI6Z7nkA6JOAaiNsWjLcPFKF9CjAn0idfrvx//sBxoSz36WDZOTxD7tWHAE0fdxvJsMOzSdEgdl/8uIDoukdw5UrG4j2UsF/wWfUf8harerktWpaYj69PzDjdc1Pn6xOziunlEzeYLC44uElSvFfAPi/ABYNk8J3SxVEXVyh/lfvqzbJfk1cQk0aT4z/j2Lq1Z50p89k/fQq1louOkAqLPxcxI=
